// Generated register defines for conv1d_control

// Copyright information found in source file:
// Copyright 2024 Politecnico di Torino.Copyright and related rights are licensed under the Solderpad Hardware

// Licensing information found in source file:
// licensed under the Solderpad Hardware

#ifndef _CONV1D_CONTROL_REG_DEFS_
#define _CONV1D_CONTROL_REG_DEFS_

#ifdef __cplusplus
extern "C" {
#endif
// Register width
#define CONV1D_CONTROL_PARAM_REG_WIDTH 32

// Accelerator main control and status register
#define CONV1D_CONTROL_CONTROL_REG_OFFSET 0x0
#define CONV1D_CONTROL_CONTROL_START_BIT 0
#define CONV1D_CONTROL_CONTROL_MCU_USING_SRAM_BIT 1
#define CONV1D_CONTROL_CONTROL_LOADED_FLAG_BIT 2

// Accelerator status register
#define CONV1D_CONTROL_STATUS1_REG_OFFSET 0x4
#define CONV1D_CONTROL_STATUS1_RUNNING_BIT 0
#define CONV1D_CONTROL_STATUS1_DONE_BIT 1
#define CONV1D_CONTROL_STATUS1_ACCELERATOR_USING_SRAM_BIT 2
#define CONV1D_CONTROL_STATUS1_RELOAD_FLAG_BIT 3
#define CONV1D_CONTROL_STATUS1_DONE_CALCULATION_BIT 4
#define CONV1D_CONTROL_STATUS1_DONE_FILTER_BIT 5
#define CONV1D_CONTROL_STATUS1_FILTER_NUMBER_SRAM_MASK 0x7
#define CONV1D_CONTROL_STATUS1_FILTER_NUMBER_SRAM_OFFSET 8
#define CONV1D_CONTROL_STATUS1_FILTER_NUMBER_SRAM_FIELD \
  ((bitfield_field32_t) { .mask = CONV1D_CONTROL_STATUS1_FILTER_NUMBER_SRAM_MASK, .index = CONV1D_CONTROL_STATUS1_FILTER_NUMBER_SRAM_OFFSET })
#define CONV1D_CONTROL_STATUS1_DATA_NUMBER_SRAM_MASK 0x7
#define CONV1D_CONTROL_STATUS1_DATA_NUMBER_SRAM_OFFSET 11
#define CONV1D_CONTROL_STATUS1_DATA_NUMBER_SRAM_FIELD \
  ((bitfield_field32_t) { .mask = CONV1D_CONTROL_STATUS1_DATA_NUMBER_SRAM_MASK, .index = CONV1D_CONTROL_STATUS1_DATA_NUMBER_SRAM_OFFSET })
#define CONV1D_CONTROL_STATUS1_LEGO_NUMBER_DIN_MASK 0x3
#define CONV1D_CONTROL_STATUS1_LEGO_NUMBER_DIN_OFFSET 14
#define CONV1D_CONTROL_STATUS1_LEGO_NUMBER_DIN_FIELD \
  ((bitfield_field32_t) { .mask = CONV1D_CONTROL_STATUS1_LEGO_NUMBER_DIN_MASK, .index = CONV1D_CONTROL_STATUS1_LEGO_NUMBER_DIN_OFFSET })
#define CONV1D_CONTROL_STATUS1_LEGO_NUMBER_WEIGHTS_MASK 0x3
#define CONV1D_CONTROL_STATUS1_LEGO_NUMBER_WEIGHTS_OFFSET 16
#define CONV1D_CONTROL_STATUS1_LEGO_NUMBER_WEIGHTS_FIELD \
  ((bitfield_field32_t) { .mask = CONV1D_CONTROL_STATUS1_LEGO_NUMBER_WEIGHTS_MASK, .index = CONV1D_CONTROL_STATUS1_LEGO_NUMBER_WEIGHTS_OFFSET })
#define CONV1D_CONTROL_STATUS1_LEGO_TOWER_DIN_MASK 0x1f
#define CONV1D_CONTROL_STATUS1_LEGO_TOWER_DIN_OFFSET 18
#define CONV1D_CONTROL_STATUS1_LEGO_TOWER_DIN_FIELD \
  ((bitfield_field32_t) { .mask = CONV1D_CONTROL_STATUS1_LEGO_TOWER_DIN_MASK, .index = CONV1D_CONTROL_STATUS1_LEGO_TOWER_DIN_OFFSET })

// Accelerator status register
#define CONV1D_CONTROL_STATUS2_REG_OFFSET 0x8
#define CONV1D_CONTROL_STATUS2_DIN_ADDRESS_MASK 0xff
#define CONV1D_CONTROL_STATUS2_DIN_ADDRESS_OFFSET 0
#define CONV1D_CONTROL_STATUS2_DIN_ADDRESS_FIELD \
  ((bitfield_field32_t) { .mask = CONV1D_CONTROL_STATUS2_DIN_ADDRESS_MASK, .index = CONV1D_CONTROL_STATUS2_DIN_ADDRESS_OFFSET })
#define CONV1D_CONTROL_STATUS2_DOUT_ADDRESS_MASK 0xff
#define CONV1D_CONTROL_STATUS2_DOUT_ADDRESS_OFFSET 8
#define CONV1D_CONTROL_STATUS2_DOUT_ADDRESS_FIELD \
  ((bitfield_field32_t) { .mask = CONV1D_CONTROL_STATUS2_DOUT_ADDRESS_MASK, .index = CONV1D_CONTROL_STATUS2_DOUT_ADDRESS_OFFSET })
#define CONV1D_CONTROL_STATUS2_WEIGHT_ADDRESS_MASK 0xff
#define CONV1D_CONTROL_STATUS2_WEIGHT_ADDRESS_OFFSET 16
#define CONV1D_CONTROL_STATUS2_WEIGHT_ADDRESS_FIELD \
  ((bitfield_field32_t) { .mask = CONV1D_CONTROL_STATUS2_WEIGHT_ADDRESS_MASK, .index = CONV1D_CONTROL_STATUS2_WEIGHT_ADDRESS_OFFSET })

#ifdef __cplusplus
}  // extern "C"
#endif
#endif  // _CONV1D_CONTROL_REG_DEFS_
// End generated register defines for conv1d_control
